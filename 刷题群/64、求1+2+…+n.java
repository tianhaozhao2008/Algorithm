这题是求 1+2+...+n ，然后不让用乘除、不让用循环、不让用if判断。
1.如果正常做的话，直接通项公式（1+n）*n/2，但是不能乘除法，所以排除。
2.还有就是遍历一遍，分别相加，但是需要用到循环，排除。
3.剩下就是递归，return n+recur(n-1)，但是基本结束条件要判断if(n==0)就不调用自身了，但if不让用，所以也不行。
但想一想发现可以借助逻辑运算符的短路功能，从而使得当if满足条件时，让后面（递归调用自身）的语句短路，从而达到终止递归的作用。

代码如下：即如果n==0时就不执行后面那个递归调用自身了。
注意的语法细节：
1.直接弄或运算时，要把整个布尔表达式定义成一个boolean变量，不然直接写的话会出错。
2.如下代码或运算的右边，是sum赋值的同时，再判断大小，是可以这么写的但是要注意用括号把sum的整个赋值语句括起来，不然报错。判断大于0这个条件随便写就行。
class Solution {
    public int sumNums(int n) {
        int sum=0;
        boolean x= n==0 ||(sum=n+sumNums(n-1))>0;
        return sum;
    }
}
