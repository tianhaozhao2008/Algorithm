就是数组中，所有数都是有两个一样的，只有两个数是单独的，比如 1，3，2，1，3，2，5，6，那么5和6就是孤单的数。1、3、2是成对的。
然后让你找到孤单的这两个数。如果孤单的只有一个数，就很好办了，用位运算（两个int之间位运算就是把他们先转换成二进制，按位运算后的
结果再转换回int型。比如1和2按位作亦或^运算，就是01和10按位亦或，得到11，转换回来的结果就是3）.
如果孤单的只有一个数，那么其它相同的数两两亦或的结果是0，最后0和任何数亦或还是任何数，所以让所有数亦或一遍后，得到的就是单独的那个数（因为
亦或满足交换律）。

现在由于是两个数是单独的，那么所有数亦或一遍后的结果，就相当于这两个数亦或的结果，由于这两个数不同，所以至少有一位的亦或结果是1（二进制状态下，
1表示这一位不同）。
设想如果我们把整个数组分成两部分来进行亦或，其中那两个单独的数分别在两个不同的部分，然后再保证相同的一对数要在相同的一部分即可，然后
分别对这两部分按位亦或，即可得到结果。

如何划分成两部分呢？很容易想到如果两个数是相同的，那么它们对某个数做任何运算的结果都是一样的，因此只要找到某个数做某种运算，结果相同的
放到相同的部分即可；然后我们还要使单独的那两个数做某种运算的结果不同（从而才能划分到不同的部分），
  要使结果不同，我们就可以根据刚才两个数亦或的结果，为1的二进制位数说明这一位它们一个是0一个是1，因此我们只需要让他们对一个数（这一位是1，
  其他位是0）做与（亦或也行）操作，结果就是不同的，即可把它们划分到不同的部分。
  
  代码如下：（<<是带符号左移（正数的符号位是0），>>是带符号右移，>>>是无符号右移）
  
